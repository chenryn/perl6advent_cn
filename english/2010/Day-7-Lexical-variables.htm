<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en">

<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>Day 7 &#8211; Lexical variables &laquo; Perl 6 Advent Calendar</title>

<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/pub/kubrick/style.css?m=1321457824g&amp;3" type="text/css" media="screen" />
<!--[if lte IE 8]><link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/pub/kubrick/ie.css?m=1308100844g" type="text/css" media="screen" /><![endif]-->
<link rel="pingback" href="http://perl6advent.wordpress.com/xmlrpc.php" />

<meta name="google-site-verification" content="YPNxtMSK3Jj7JR2XCK-hDqmF9xDIeBEyvYm3aT1s71Y" />
<link rel="alternate" type="application/rss+xml" title="Perl 6 Advent Calendar &raquo; Feed" href="http://perl6advent.wordpress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Perl 6 Advent Calendar &raquo; Comments Feed" href="http://perl6advent.wordpress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Perl 6 Advent Calendar &raquo; Day 7 &#8211; Lexical&nbsp;variables Comments Feed" href="http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script>
<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/h4/global.css?m=1313010128g" type="text/css" />
<link rel='stylesheet' id='loggedout-subscribe-css'  href='http://s0.wp.com/wp-content/blog-plugins/loggedout-follow/widget.css?m=1322602714g&#038;ver=20111128' type='text/css' media='all' />
<link rel='stylesheet' id='post-reactions-css'  href='http://s1.wp.com/wp-content/mu-plugins/post-flair/style.css?m=1322086816g&#038;ver=3' type='text/css' media='all' />
<script type='text/javascript' src='http://s2.wp.com/wp-includes/js/jquery/jquery.js?m=1322588683g&#038;ver=1.7.1'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/blog-plugins/loggedout-follow/widget.js?m=1320005309g&#038;ver=20111128'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-includes/js/comment-reply.js?m=1308100830g&#038;ver=20090102'></script>
<link rel='stylesheet' id='highlander-comments-css'  href='http://s1.wp.com/wp-content/mu-plugins/highlander-comments/style.css?m=1323127130g&#038;ver=20110620' type='text/css' media='all' />
<!--[if lt IE 8]>
<link rel='stylesheet' id='highlander-comments-ie7-css'  href='http://s0.wp.com/wp-content/mu-plugins/highlander-comments/style-ie7.css?m=1308100835g&#038;ver=20110606' type='text/css' media='all' />
<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://perl6advent.wordpress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://perl6advent.wordpress.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Day 6 &#8211; The X and Z&nbsp;metaoperators' href='http://perl6advent.wordpress.com/2010/12/06/the-x-and-z-metaoperators/' />
<link rel='next' title='Day 8 &#8211; Different Names of Different&nbsp;Things' href='http://perl6advent.wordpress.com/2010/12/08/different-names-of-different-things/' />
<meta name="generator" content="WordPress.com" />
<link rel='canonical' href='http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/' />
<link rel='shortlink' href='http://wp.me/pJ3YZ-8k' />
<link rel="alternate" type="application/json+oembed" href="http://public-api.wordpress.com/oembed/1.0/?format=json&url=http%3A%2F%2Fperl6advent.wordpress.com%2F2010%2F12%2F07%2Fday-7-lexical-variables%2F&for=wpcom-auto-discovery" /><link rel="alternate" type="application/xml+oembed" href="http://public-api.wordpress.com/oembed/1.0/?format=xml&url=http%3A%2F%2Fperl6advent.wordpress.com%2F2010%2F12%2F07%2Fday-7-lexical-variables%2F&for=wpcom-auto-discovery" /><meta property="og:type" content="article" />
<meta property="og:title" content="Day 7 &#8211; Lexical&nbsp;variables" />
<meta property="og:url" content="http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/" />
<meta property="og:description" content="Programming is tough going. Well, stringing together lines of code isn&#039;t that difficult, and prototyping an idea can be pleasant and easy. But as the size of the program scales up, and the maintena..." />
<meta property="og:site_name" content="Perl 6 Advent Calendar" />
<link rel="shortcut icon" type="image/x-icon" href="http://s2.wp.com/i/favicon.ico?m=1311976024g" sizes="16x16 24x24 32x32 48x48" />
<link rel="icon" type="image/x-icon" href="http://s2.wp.com/i/favicon.ico?m=1311976024g" sizes="16x16 24x24 32x32 48x48" />
<link rel="apple-touch-icon-precomposed" href="http://s0.wp.com/i/webclip.png?m=1311618118g" />
<link rel='openid.server' href='http://perl6advent.wordpress.com/?openidserver=1' />
<link rel='openid.delegate' href='http://perl6advent.wordpress.com/' />
<link rel="search" type="application/opensearchdescription+xml" href="http://perl6advent.wordpress.com/osd.xml" title="Perl 6 Advent Calendar" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com" />
	<style type="text/css">
	/* <![CDATA[ */
			/* ]]> */
	</style>
	<style type="text/css">
#header     { margin: 0 !important; margin: 0 0 0 1px; padding: 1px; height: 198px; width: 758px; }
#headerimg  { margin: 7px 9px 0; height: 192px; width: 740px; }
#headerimg { background: url(http://perl6advent.files.wordpress.com/2009/12/perl6advent2.png) no-repeat top;}
#header h1 a, #header h1 a:hover, #header .description {
	color: #ffffff;
}
</style>
<style type='text/css'><!--
body { background: url("http://s0.wp.com/wp-content/themes/pub/kubrick/images/kubrickbgcolor.gif?m=1308100844g"); }
#page { background: url("http://s0.wp.com/wp-content/themes/pub/kubrick/images/kubrickbgwide.gif?m=1308100844g") repeat-y top !important; border: none; }
#header { background: url("http://s0.wp.com/wp-content/themes/pub/kubrick/images/kubrickheader.gif?m=1308100844g") no-repeat bottom center; }
#footer { background: url("http://s0.wp.com/wp-content/themes/pub/kubrick/images/kubrickfooter.gif?m=1308100844g") no-repeat bottom; border: none;}
#header { margin: 0 !important; margin: 0 0 0 1px; padding: 1px; height: 198px; width: 758px; }
#headerimg { margin: 7px 9px 0; height: 192px; width: 740px; }
#headerimg h1 a, #headerimg h1 a:visited, #headerimg .description { color: #FFFFFF; }
#headerimg h1 a, #headerimg .description { display:  }

	--></style><meta name="application-name" content="Perl 6 Advent Calendar" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-tooltip" content="Something cool about Perl 6 every day" /><meta name="msapplication-task" content="name=Subscribe;action-uri=http://perl6advent.wordpress.com/feed/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" />
<script type="text/javascript" src="http://rt.liftdna.com/liftrtb2_1.js"></script>
<script type="text/javascript" src="http://rt.liftdna.com/WP.js"></script>
<script type="text/javascript"> 
	window.google_analytics_uacct = "UA-52447-2"; 
</script>

<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-52447-2']);
	_gaq.push(['_setDomainName', 'wordpress.com']);
	_gaq.push(['_initData']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
	})();
</script>
</head>
<body class="typekit-enabled highlander-enabled highlander-light">
<div id="page">


<div id="header">
	<div id="headerimg" onclick=" location.href='http://perl6advent.wordpress.com';" style="cursor: pointer;">
		<h1><a href="http://perl6advent.wordpress.com/">Perl 6 Advent Calendar</a></h1>
		<div class="description">Something cool about Perl 6 every day</div>
	</div>
</div>
<hr />

	<div id="content" class="widecolumn">

	
		<div class="navigation">
			<div class="alignleft">&laquo; <a href="http://perl6advent.wordpress.com/2010/12/06/the-x-and-z-metaoperators/" rel="prev">Day 6 &#8211; The X and Z&nbsp;metaoperators</a></div>
			<div class="alignright"><a href="http://perl6advent.wordpress.com/2010/12/08/different-names-of-different-things/" rel="next">Day 8 &#8211; Different Names of Different&nbsp;Things</a> &raquo;</div>
		</div>

		<div class="post-516 post type-post status-publish format-standard hentry category-2010 clear" id="post-516">
						<h2>Day 7 &#8211; Lexical&nbsp;variables</h2>
			<small class="single-by"><span class="by-author"><span class="sep">by</span> <span class="author vcard"><a class="url fn n" href="http://perl6advent.wordpress.com/author/brushingupmyknuth/" title="View all posts by carl" rel="author">carl</a></span> </span></small>

			<div class="entry">
				<p>Programming is tough going. Well, stringing together lines of code isn&#8217;t that difficult, and prototyping an idea can be pleasant and easy. But as the size of the program scales up, and the maintenance time lengthens, things tend to get tricky. Eventually, if we&#8217;re unlucky, we&#8217;re overcome by the complexity — not necessarily the complexity of the problem we started out solving, but the complexity of the program itself. We get gray hairs from debugging, or we&#8217;re simply at a loss for how to extend the program to do what we want.</p>
<p>So we turn to the history of programming, seeking advice as to how to combat complexity. And the answer sits there, clear as day: <em>limit extent</em>. If you&#8217;re architecting programs with hundreds or thousands of types of components, you&#8217;ll want those components to interact through only a very small set of surfaces&#8230; otherwise, you&#8217;ll simply lose control. Otherwise, combinatorics will defeat you.</p>
<p>We see this principle at every single level of programming, simply because it&#8217;s such a primary thing: Separation of Concerns, Do One Thing And Do It Well, BCNF, monads, routines, classes, roles, modules, packages. All of them urge us or guide us to limit the extent of things, so we don&#8217;t lose to combinatorics.  Perhaps the simplest example of this is the <strong>lexical variable</strong>.</p>
<pre>{
    my $var;
    # $var is visible in here
}
# $var is not visible out here</pre>
<p>Yeah — that is today&#8217;s &#8220;cool feature&#8221;. <code>:-)</code> Here&#8217;s what makes it interesting:</p>
<p>Perl got this one wrong from version 1 and onwards. The default variable scope in Perl 5 is the &#8220;package variable&#8221;, a kind of global variable. Define something inside a block; still see it outside.</p>
<pre>$ perl -v
This is perl 5, version 12, subversion 1 (v5.12.1)

$ perl -E '{ $var = 42 }; say $var'
42

$ perl -wE '{ my $var= 42 }; say $var'
Name "main::var" used only once: possible typo at -e line 1.
Use of uninitialized value $var in say at -e line 1.</pre>
<p>In Perl 6, the lexical variable is the default. You won&#8217;t get past compilation if you try to pull off the above trick in Rakudo:</p>
<pre>$ perl6 -e '{ $var = 42 }; say $var'    # gotta initialize with 'my'
===SORRY!===
Symbol '$var' not predeclared in &lt;anonymous&gt;

$ perl6 -e '{ my $var = 42 }; say $var' # still won't work! not visible outside
===SORRY!===
Symbol '$var' not predeclared in &lt;anonymous&gt;</pre>
<p>You might say &#8220;okay, this is great for catching a typo now and then&#8221;. Yes, sure, but the big advantage is that this keeps you honest about variable scoping. And that helps you manage complexity.</p>
<p>Now let me just rush to the defense of Perl 5 by saying a variety of things at the same time. Perl 5 <em>does</em> try to steer you in the right way by having you <code>use strict</code> and <code>use warnings</code> by reflex; Perl 5 is bound by its promise of backwards compatibility, which is very good and noble; Perl 1 certainly was not about writing large applications and managing the resulting complexity; and global variables do make a lot of sense in a one-line script.</p>
<p>Perl 6 has an inherent focus to help you start small, and then help you put in more strictures and architectural underpinnings as your application scales up. In the case of variables, this means that in scripts and modules, lexical variables (à la <code>strict</code>) are the default, but in those <code>-e</code> one-liners the default is package variables. (Rakudo doesn&#8217;t implement this distinction yet, and one has to use lexical variables even at the command line. After it&#8217;s been implemented in Rakudo, I&#8217;d expect the <code>perl6</code> invocations above to get past compilation, and produce outputs similar to the <code>perl</code> invocations.)</p>
<p>Moving along. At this point you might consider all that&#8217;s worth saying about lexical variables to have been said — not so. You see, the result of designing things right is that surprising and awesome bonuses keep falling out. Consider this subroutine:</p>
<pre>sub counter($start_value) {
    my $count = $start_value;
    return { $count++ };
}</pre>
<p>What&#8217;s returned at <code>return { $count++ }</code> is a block of code. So each time we call <code>counter</code>, what we get back is a little disconnected piece of code that can be called, as many times as we want.</p>
<p>Now look what happens when we create two such pieces of code and play around with them:</p>
<pre>my $c1 = counter(5);
say $c1();           # 5
say $c1();           # 6

my $c2 = counter(42);
say $c2();           # 42
say $c1();           # 7
say $c2();           # 43</pre>
<p>See that? The vital observation here is that <code>$c1</code> and <code>$c2</code> are acting entirely independently of each other. Both keep their own state, in the form of the <code>$count</code> variable, and although this might look like the same variable to <em>us</em>, to the two invocations of <code>counter</code> it looks like two different storage locations — because each time we enter a block of code, we start out afresh. The little block of code returned from some run of <code>counter</code> retains a relation to that particular storage location (it &#8220;<em>closes over</em>&#8221; the storage location, protecting it from the grasp of the Grim Garbage Collector; thus this kind of block is called a <em>closure</em>.)</p>
<p>If closures look a lot like lightweight objects to you, congratulations; they are. The principle behind closures, regulating the way values are accessed, is the same as the principle behind encapsulation and information hiding in OO. It&#8217;s all about limiting the extent of things, so that they can wreak as little havoc as possible when things turn ugly.</p>
<p>You can do nifty things like closures with lexical variables. You can&#8217;t with package variables. Lexical variables are cooler. QED.</p>

<div id="wpcom_below_post"  class="wpadvert" style="text-align: center; padding: 5px; background: #; padding: 5px; margin: 10px auto; width: 310px;">
<!-- <span style="text-align: left; letter-spacing: 1px; font: 8px/1em Verdana, sans-serif; color: #ccc; text-transform: uppercase; display: block; padding: 0 1px;">Advertisement</span> -->
<script type="text/javascript">
LD_AddCustomAttr("AdOpt", "1");
LD_AddCustomAttr("Origin", "other");
LD_AddCustomAttr("theme_bg", "ffffff"); 
LD_AddCustomAttr("theme_text", "333333"); 
LD_AddCustomAttr("theme_link", "0066cc"); 
LD_AddCustomAttr("theme_border", "f9f9f9"); 
LD_AddCustomAttr("theme_url", "114477"); 
LD_AddCustomAttr("LangId", "1");
LD_AddCustomAttr("Autotag", "technology");
LD_AddCustomAttr("Autotag", "science");
LD_AddCustomAttr("Tag", "2010");

LD_AddSlot("wpcom_below_post");
LD_GetBids();
</script>
</div><div class="sharedaddy sd-like-enabled"><div id="wpl-likebox" class="sd-block sd-like"><h3 class="sd-title">Like this:</h3><div class="sd-content"><div id="wpl-button"><a href='http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/?like=1&amp;_wpnonce=762128a6f3' title='I like this post' class='like needs-login sd-button' rel='nofollow'><span>Like</span></a></div><div id="wpl-count" class="sd-like-count">Be the first to like this post.</div></div></div></div>
								
				<p class="postmetadata alt">
					<small>
												This entry was posted on December 7, 2010 at 12:00 am and is filed under <a href="http://perl6advent.wordpress.com/category/2010/" title="View all posts in 2010" rel="category tag">2010</a>.						You can follow any responses to this entry through the <a href='http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/feed/'>RSS 2.0</a> feed.
													You can <a href="#respond">leave a response</a>, or <a href="http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/trackback/" rel="trackback">trackback</a> from your own site.
						
					</small>
				</p>

			</div>
					</div>

	
<!-- You can start editing here. -->
	<h3 id="comments">4 Responses to &#8220;Day 7 &#8211; Lexical&nbsp;variables&#8221;</h3>

	<ol class="commentlist">
					<li class="comment even thread-even depth-1 highlander-comment" id="comment-455">
			<img alt='' src='http://1.gravatar.com/avatar/b7b4ca9dbc3ab2a5d9adda0e4ac3ebbc?s=32&amp;d=identicon&amp;r=G' class='avatar avatar-32' height='32' width='32' />			<cite>Brian</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-455" title="">December 8, 2010 at 2:00 am</a> | <a class='comment-reply-link' href='/2010/12/07/day-7-lexical-variables/?replytocom=455#respond' onclick='return addComment.moveForm("comment-455", "455", "respond", "516")'>Reply</a> </small>

			<p>It&#8217;d be best if you avoided the variable $a , by the way, in the example; in perl5, $a and $b are specially handled, so &#8216;use strict&#8217; won&#8217;t help a bit with them.</p>
<ul class='children'>
			<li class="comment byuser comment-author-brushingupmyknuth bypostauthor odd alt depth-2 highlander-comment" id="comment-459">
			<img alt='' src='http://0.gravatar.com/avatar/2d9d4815e8e5927a4e04cdea13ca1e36?s=32&amp;d=identicon&amp;r=G' class='avatar avatar-32' height='32' width='32' />			<cite>carl</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-459" title="">December 8, 2010 at 3:23 pm</a> | <a class='comment-reply-link' href='/2010/12/07/day-7-lexical-variables/?replytocom=459#respond' onclick='return addComment.moveForm("comment-459", "459", "respond", "516")'>Reply</a> </small>

			<p>Dear commenter, you are absolutely correct. I&#8217;ve now changed all occurrences of <code>$a</code> in the post to <code>$var</code>.</p>
<p>I thought about mentioning in the post an occasion a few years ago at which I thought I had found a really serious bug in perl. In analyzing it, I applied all the techniques i use with Perl 6 of reducing the problem to a one-liner to isolate and identify the problem. At the end, I was left with a call to <a href="http://perldoc.perl.org/functions/sort.html" rel="nofollow"><code>&amp;sort</code></a> and one more use of <code>$a</code>. And I went &#8220;oh&#8221; and remembered the exception about <code>$a</code> and <code>$b</code>.</p>
<p>The package-globalness of <code>$a</code> and <code>$b</code> is understandable from a historical perspective &mdash; <code>$a</code> and <code>$b</code> were used in <code>&amp;sort</code> as package globals before lexical scoping was introduced &mdash; but it&#8217;s one of the things that Perl 5 got wrong and can&#8217;t back-compat itself out of. Perl 6 fixes the whole problem without much fanfare.</p>
</li>
</ul>
</li>
			<li class="comment even thread-odd thread-alt depth-1 highlander-comment" id="comment-888">
			<img alt='' src='http://1.gravatar.com/avatar/d0f3ba56744ffc3654bbcf8f96f34626?s=32&amp;d=identicon&amp;r=G' class='avatar avatar-32' height='32' width='32' />			<cite>bessarabov</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-888" title="">May 13, 2011 at 11:58 am</a> | <a class='comment-reply-link' href='/2010/12/07/day-7-lexical-variables/?replytocom=888#respond' onclick='return addComment.moveForm("comment-888", "888", "respond", "516")'>Reply</a> </small>

			<p>To be honest perl5 can do the same trick:</p>
<p>#!/usr/bin/perl</p>
<p>use 5.010_000;</p>
<p>sub counter {<br />
    my ($count) = @_;<br />
    return sub { $count++ };<br />
}</p>
<p>my $c1 = counter(5);<br />
say $c1-&gt;();   # 5<br />
say $c1-&gt;();   # 6 </p>
<p>my $c2 = counter(42);<br />
say $c2-&gt;();   # 42<br />
say $c2-&gt;();   # 43</p>
<ul class='children'>
			<li class="comment byuser comment-author-brushingupmyknuth bypostauthor odd alt depth-2 highlander-comment" id="comment-889">
			<img alt='' src='http://0.gravatar.com/avatar/2d9d4815e8e5927a4e04cdea13ca1e36?s=32&amp;d=identicon&amp;r=G' class='avatar avatar-32' height='32' width='32' />			<cite>carl</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-889" title="">May 13, 2011 at 2:35 pm</a> | <a class='comment-reply-link' href='/2010/12/07/day-7-lexical-variables/?replytocom=889#respond' onclick='return addComment.moveForm("comment-889", "889", "respond", "516")'>Reply</a> </small>

			<p>Oh, for sure. It&#8217;s more like there&#8217;s a two-fold layering here:</p>
<ul>
<li>Lexical variables can do the closures trick. Package variables can&#8217;t.</li>
<li>Perl 5&#8242;s default is package variables. We know lexical variables to be the better default, but we&#8217;re bound by backwards compatibility in Perl 5. In Perl 6, the default is lexical variables.</li>
</ul>
<p>So, it&#8217;s not that Perl 6 beats Perl 5 in terms of features; they&#8217;re equally powerful in this regard. But Perl 6 has the saner default.</p>
</li>
</ul>
</li>
	
	</ol>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

 


								<div id="respond">
				<h3 id="reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2010/12/07/day-7-lexical-variables/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://perl6advent.wordpress.com/wp-comments-post.php" method="post" id="commentform">
																										


												
<input type="hidden" name="hc_post_as" id="hc_post_as" value="guest" />

<div class="comment-form-field comment-textarea">
	<label for="comment">Enter your comment here...</label>
	<div id="comment-form-comment"><textarea id="comment" name="comment"></textarea></div>
</div>

<div id="comment-form-identity">

	<div id="comment-form-nascar">
		<p>Fill in your details below or click an icon to log in:</p>
		<ul>
			<li class="selected" style="display:none;">
				<a href="#comment-form-guest" id="postas-guest" title="Guest">
					<span></span>
				</a>
			</li>
			<li>
				<a href="#comment-form-wordpress" id="postas-wordpress" title="WordPress.com">
					<span></span>
				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:Twitter" id="postas-twitter" title="Twitter">
					<span></span>
				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:Facebook" id="postas-facebook" title="Facebook">
					<span></span>
				</a>
			</li>
		</ul>
	</div>

	<div id="comment-form-guest" class="comment-form-service selected">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="http://www.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&d=mm" alt="Gravatar" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<div class="comment-form-field comment-form-email">
					<label for="email">Email <span class="required">(required)</span> <span class="nopublish">(Not published)</span></label>
					<div class="comment-form-input"><input id="email" name="email" type="text" value="" /></div>
				</div>
				<div class="comment-form-field comment-form-author">
					<label for="author">Name <span class="required">(required)</span></label>
					<div class="comment-form-input"><input id="author" name="author" type="text" value="" /></div>
				</div>
				<div class="comment-form-field comment-form-url">
					<label for="url">Website</label>
					<div class="comment-form-input"><input id="url" name="url" type="text" value="" /></div>
				</div> 
			</div>
	
		</div>
	</div>

	<div id="comment-form-wordpress" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="http://s2.wp.com/wp-content/mu-plugins/highlander-comments/images/wplogo.png?m=1308100835g" alt="WordPress.com Logo" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
					<p id="wordpress-login-first">Please log in to WordPress.com to post a comment to your blog.</p>
				<iframe id="wordpress-login-iframe" data-srcurl="http://perl6advent.wordpress.com/wp-login.php?redirect_to=http%3A%2F%2Fperl6advent.wordpress.com%2Fhighlander.login%2F&#038;action=highlander-login&#038;skin=light"></iframe>
				</div>
	
		</div>
	</div>

	<div id="comment-form-twitter" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="http://www.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&d=mm" alt="Twitter picture" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="twitter_avatar" id="twitter-avatar" class="comment-meta-twitter" value="" />
				<input type="hidden" name="twitter_user_id" id="twitter-user_id" class="comment-meta-twitter" value="" />
				<input type="hidden" name="twitter_access_token" id="twitter-access_token" class="comment-meta-twitter" value="" />
				<p class="comment-form-posting-as pa-twitter"><strong></strong> You are commenting using your Twitter account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'twitter' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-facebook" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="http://www.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&d=mm" alt="Facebook photo" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="fb_avatar" id="facebook-avatar" class="comment-meta-facebook" value="" />
				<input type="hidden" name="fb_user_id" id="facebook-user_id" class="comment-meta-facebook" value="" />
				<input type="hidden" name="fb_access_token" id="facebook-access_token" class="comment-meta-facebook" value="" />
				<p class="comment-form-posting-as pa-facebook"><strong></strong> You are commenting using your Facebook account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'facebook' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>


	<div id="comment-form-load-service" class="comment-form-service"> 
		<div class="comment-form-posting-as-cancel"><a href="javascript:HighlanderComments.cancelExternalWindow();">Cancel</a></div>
		<p>Connecting to %s</p> 
	</div>
	
	
</div>


<div id="comment-form-subscribe"> 
<p class="comment-subscription-form"><input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;" tabindex="6"/> <label class="subscribe-label" id="subscribe-label" for="subscribe">Notify me of follow-up comments via email.</label></p></div>

	<script type="text/javascript">
	jQuery(document).ready(function(){
		HighlanderComments.comment_registration = '';
		HighlanderComments.userIsLoggedIn = false;
			});
	</script>
												<p class="form-submit">
							<input name="submit" type="submit" id="comment-submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='516' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						
<input type="hidden" name="genseq" value="1323709590" />
<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="beba41ec2a" /></p><script type='text/javascript' src='http://s1.wp.com/wp-content/mu-plugins/akismet-2.5/form.js?m=1308783981g&#038;ver=1'></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="29"/></p>					</form>
							</div><!-- #respond -->
			<div style="clear: both"></div>			

	
	</div>


<hr />
<div id="footer">
	<p>
		Theme: <a href="http://theme.wordpress.com/themes/kubrick/">Kubrick</a>. <a href="http://wordpress.com/?ref=footer" rel="generator">Blog at WordPress.com</a>. 
		<br /><a href="http://perl6advent.wordpress.com/feed/">Entries (RSS)</a> and <a href="http://perl6advent.wordpress.com/comments/feed/">Comments (RSS)</a>.	</p>
</div>
</div>

<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?aa&#038;ver=MU'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1318621578g&#038;ver=MU'></script>

<script type="text/javascript">
var _qevents = _qevents || [];
(function() {var elem = document.createElement('script');elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";elem.async = true;elem.type = "text/javascript";var scpt = document.getElementsByTagName('script')[0];scpt.parentNode.insertBefore(elem, scpt);  })();
_qevents.push( { qacct:"p-18-mFEk4J448M", labels:",language.en,type.wpcom,as" } );
</script>
<noscript><div style="display: none;"><img src="//pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=%2Clanguage.en%2Ctype.wpcom%2Cas" height="1" width="1" alt="" /></div></noscript>

	<script type="text/javascript">
	/* <![CDATA[ */
		jQuery(document).ready( function($) {
			
			$('#wpl-button > a.like').click( function(e) {
				e.preventDefault();
				
				$('#wpl-mustlogin').remove();
				
				$.post( 'http://perl6advent.wordpress.com/wp-admin/admin-ajax.php', { 
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_like_click'
				} );

				var tenMins = new Date();
				tenMins.setTime( tenMins.getTime() + 600000 );
				document.cookie = 'wpl_rand=615903b313; expires=' + tenMins.toGMTString() + '; domain=wordpress.com; path=/;';
				
				$('#wpl-count').after( '\
					<div id="wpl-mustlogin"> \
						<form action="https://perl6advent.wordpress.com/wp-login.php" method="post"> \
							<p>Just one more step to like this post:</p> \
							<label><span>Username</span> <input type="text" name="log" id="user_login" class="input" value="" size="20" tabindex="80" /></label> \
							<label><span>Password</span> <input type="password" name="pwd" id="user_pass" class="input" value="" size="20" tabindex="81" /></label> \
							<input type="submit" name="wp-submit" id="wp-submit" class="button-primary" value="Log In" tabindex="82" /> \
							<input type="hidden" name="redirect_to" value="http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/?like=1" /> \
							<input type="hidden" name="wpl_rand" value="615903b313" /> \
							<p>Not a member yet? <a href="http://wordpress.com/signup/?ref=likebox" id="wpl-signup-link">Sign up with WordPress.com</a></p> \
						</form> \
					</div> \
				');
				
				$('#wpl-mustlogin').hide().slideDown('fast');
			} );
			
			$('#wpl-mustlogin input.input').live( 'focus', function() {
				$(this).prev().hide();
			}).live( 'blur', function() {
				if ( $(this).val() == '' )
					$(this).prev().show();
			});
			
			$('#wpl-mustlogin input#wp-submit').live( 'click', function(e) {
				e.preventDefault();
				
				$.post( 'http://perl6advent.wordpress.com/wp-admin/admin-ajax.php', { 
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_login_submit'
				}, function() {
					$('#wpl-mustlogin form').submit();
				} );
			});			
			
			$('#wpl-mustlogin a#wpl-signup-link').live( 'click', function(e) {
				e.preventDefault();
				
				var link = $(this).attr('href');
				
				$.post( 'http://perl6advent.wordpress.com/wp-admin/admin-ajax.php', { 
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_signup_click'
				}, function() {
					location.href = link;
				} );
			});					
			
		});
	/* ]]> */
	</script>
<script>jQuery(document).ready(function($){ Gravatar.profile_cb = function( h, d ) { WPGroHo.syncProfileData( h, d );	}; Gravatar.my_hash = WPGroHo.my_hash; Gravatar.init( 'body', '#wpadminbar' ); });</script>	<div style="display:none">
	<div class="grofile-hash-map-b7b4ca9dbc3ab2a5d9adda0e4ac3ebbc">
	</div>
	<div class="grofile-hash-map-2d9d4815e8e5927a4e04cdea13ca1e36">
	</div>
	<div class="grofile-hash-map-d0f3ba56744ffc3654bbcf8f96f34626">
	</div>
	</div>
		<style type="text/css">
			
				.reblog-from img                   { margin: 0 10px 0 0; vertical-align: middle; padding: 0; border: 0; }
				.reblogger-note img.avatar         { float: left; padding: 0; border: 0; }
				.reblogger-note-content            { margin: 0 0 20px 35px; }
				.reblog-post                       { border-left: 3px solid #eee; padding-left: 15px; }
				.reblog-post ul.thumb-list         { display: block; list-style: none; margin: 2px 0; padding: 0; clear: both; }
				.reblog-post ul.thumb-list li      { display: inline; margin: 0; padding: 0 1px; border: 0; }
				.reblog-post ul.thumb-list li a    { margin: 0; padding: 0; border: 0; }
				.reblog-post ul.thumb-list li img  { margin: 0; padding: 0; border: 0; }
				.reblog-post                       { border-left: 3px solid #eee; padding-left: 15px; }
					</style><script type='text/javascript'>
/* <![CDATA[ */
var HighlanderComments = {"loggingInText":"Logging In\u2026","submittingText":"Posting Comment\u2026","postCommentText":"Post Comment","connectingToText":"Connecting to %s","commentingAsText":"%1$s: You are commenting using your %2$s account.","logoutText":"Log Out","loginText":"Log In","connectURL":"http:\/\/perl6advent.wordpress.com\/public.api\/connect\/?action=request","homeURL":"http:\/\/perl6advent.wordpress.com\/","postID":"516","gravDefault":"identicon","enterACommentError":"Please enter a comment","enterEmailError":"Email address required","invalidEmailError":"Invalid email address","enterAuthorError":"Name required","gravatarFromEmail":"Your email address will be used to look up your Gravatar.","logInToExternalAccount":"Log in to use details from one of these accounts.","change":"Change","changeAccount":"Change Account"};
/* ]]> */
</script>
<script type='text/javascript' src='http://s1.wp.com/wp-content/mu-plugins/highlander-comments/script.js?m=1322513932g&#038;ver=20110804'></script>
	
	<div id="bit" class="loggedout-follow-normal">
		<a class="bsub" href="javascript:void(0)"><span id='bsub-text'>Follow</span></a>
		<div id="bitsubscribe">
			
					<h3><label for="loggedout-follow-field">Follow Perl 6 Advent Calendar</label></h3>
		
			<form action="http://subscribe.wordpress.com" method="post" accept-charset="utf-8" id="loggedout-follow">
			<p>Get every new post delivered to your Inbox.</p>

					
			
			<p><input type="text" name="email" style="width: 95%; padding: 1px 2px" value="Enter email address" onfocus='this.value=(this.value=="Enter email address") ? "" : this.value;' onblur='this.value=(this.value=="") ? "Enter email address" : this.value;'  id="loggedout-follow-field"/></p>

			<input type="hidden" name="action" value="subscribe"/>
			<input type="hidden" name="blog_id" value="10740073"/>
			<input type="hidden" name="source" value="http://perl6advent.wordpress.com/2010/12/07/day-7-lexical-variables/"/>
			<input type="hidden" name="sub-type" value="loggedout-follow"/>

			<input type="hidden" id="_wpnonce" name="_wpnonce" value="535b507c2f" /><input type="hidden" name="_wp_http_referer" value="/2010/12/07/day-7-lexical-variables/" />
			<p id='bsub-subscribe-button'><input type="submit" value="Sign me up!" /></p>
			</form>
					<div id='bsub-credit'><a href="http://wordpress.com/signup/?ref=lof">Powered by WordPress.com</a></div>
		</div><!-- #bitsubscribe -->
	</div><!-- #bit -->
<script type="text/javascript" src="http://b.scorecardresearch.com/beacon.js"></script><script type="text/javascript">try{COMSCORE.beacon({c1:2,c2:7518284});}catch(e){}</script><noscript><p class="robots-nocontent"><img src="http://b.scorecardresearch.com/p?cj=1c1=2&#038;c2=7518284" alt="" style="display:none" width="1" height="1" /></p></noscript><script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script><script src="http://s.stats.wordpress.com/w.js?21" type="text/javascript"></script>
<script type="text/javascript">
st_go({'blog':'10740073','v':'wpcom','user_id':'0','post':'516','subd':'perl6advent'});
ex_go({'crypt':'UE5XaGUuOTlwaD85flAmcm1mcmZsaDhkV11YdWFnNncxc1tjZG9XVXhReTFqanhKV3x0UkQxQldDVUV4ZVR+cSt8Ny8tTm40WHJCJm0yem40UEhxUkw4QyxOai11PS9zMEdMUmc2cnc1LC1MRHJiTjFWeGpoNThTT3RXUkEuY0Z+WW9sfDhrQnZxNlpERT1aMnQlSXxFP3k4cnJYcHdzLF1vJjBzV1ArV3wxdUx5ZEZqSHxnUnxdQUVkeFg2THNkdCtBN2VNQkxYNDB+d3NFakloa0lhW0IrSm1oNC1+VVQ1LDBhTGNuUE8wV2w4Zg=='});
addLoadEvent(function(){linktracker_init('10740073',516);});
	</script>
<noscript><img src="http://stats.wordpress.com/b.gif?v=noscript" style="height:0px;width:0px;overflow:hidden" alt="" /></noscript>
</body>
</html>
