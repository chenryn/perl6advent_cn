欢迎来到新版本的本年度Perl6圣临月历。

和过去的12月1号一样，你将看到一个对过去一年的总结概要，包括我们做了哪些改动，以及我们现在处于什么位置(译者注：应该是指Perl6离实用有多远)。

这一年针对Perl6规范的重要修改很少。IO子系统已经被重写，现在的实现更加反映实际，而且已经进行了很多常见的检测衡量。[S32::Exceptions](http://perlcabal.org/syn/S32/Exception.html)也经历了大改（指绝大多数扩展），所以现在Perl6的异常处理有一个相当好的核心了。

两大Perl6编译器，Rakudo和Niecza，都成熟了很多。和去年相反，很高兴看到如果你的程序在其中一个编译器上可以运行，那么在另一个上面也没问题。而且Niecza在测试通过数上也暂时超越了Rakudo。

Niecza在role实现上有所改进，在正则、列表解析和`no strict;`模式下相当好的支持了Unicode编码和常数合并(folding)。就举这几个主要的改进吧。

Rakudo现在支持heredoc，所有的阶段（即特殊块，比如BEGIN、END、FIRST等），正则中的最长标记匹配，类型异常，更优秀的回溯跟踪和操作符副词。而且现在还有了调试器，跟着Rakudo Star一起分发。

[模块环境](http://modules.perl6.org/)也在成长。比起一年前，关于Perl6的[文档](http://doc.perl6.org/)也多了很多。

那么，看完这些变更，我们现在在哪？

已经慢慢有把Perl6用于生产的报告慢慢出现，现在来说，如果你的Perl6代码出了bug，更大的可能性是自己的代码问题而不再是编译器了。Perl6从未像现在这样好用。对于Perl6，这是富有成效的一年，我相信接下来的这一个月也会延续这个传统。玩的开心！
